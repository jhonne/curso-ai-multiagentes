# Exerc√≠cio 3: Desenvolvimento de Produto - App para Estudantes
# Solu√ß√£o: Criando agentes para gerar ideias de aplicativo

from crewai import Agent, Task, Crew, Process
from dotenv import load_dotenv

# Carrega as vari√°veis de ambiente
load_dotenv()

print("üì± Exerc√≠cio 3: Criando Ideia de App para Estudantes")
print("=" * 50)

# --- AGENTE 1: Descobridor de Problemas ---
descobridor = Agent(
    role='Especialista em Identifica√ß√£o de Problemas',
    goal='Encontrar um problema que muita gente tem',
    backstory="""Voc√™ √© observador e sempre repara quando as pessoas
    reclamam de alguma coisa. Voc√™ tem facilidade para identificar
    problemas comuns do dia a dia, especialmente de estudantes
    universit√°rios.""",
    verbose=True,
    allow_delegation=False
)

# --- AGENTE 2: Criador de Ideias ---
criador = Agent(
    role='Criador de Solu√ß√µes Tecnol√≥gicas',
    goal='Criar uma ideia de aplicativo para resolver o problema',
    backstory="""Voc√™ adora tecnologia e sempre pensa: "Podia ter um
    app para isso!" Voc√™ √© criativo e sabe pensar em solu√ß√µes simples
    e pr√°ticas usando tecnologia.""",
    verbose=True,
    allow_delegation=False
)

# --- TAREFA 1: Encontrar um Problema ---
tarefa_problema = Task(
    description="""Identifique um problema comum e chato que estudantes
    universit√°rios enfrentam no seu dia a dia na faculdade.

    Foque em:
    - P√∫blico: Estudantes universit√°rios
    - Contexto: Vida na faculdade
    - Tipo: Problemas do dia a dia

    O problema deve ser algo que realmente incomoda e que muitos
    estudantes passam por isso.""",
    expected_output="""Um problema espec√≠fico e comum que estudantes
    universit√°rios enfrentam, explicado de forma clara e simples.""",
    agent=descobridor
)

# --- TAREFA 2: Criar Ideia de App ---
tarefa_app = Task(
    description="""Com base no problema identificado, crie uma ideia
    de aplicativo simples para resolver esse problema.

    A ideia deve incluir:
    - Nome criativo para o app
    - Explica√ß√£o simples de como funciona
    - Por que seria √∫til para estudantes
    - Funcionalidade principal

    Mantenha a ideia simples e pr√°tica.""",
    expected_output="""Uma ideia completa de aplicativo com nome
    criativo e explica√ß√£o clara de como resolveria o problema dos
    estudantes.""",
    agent=criador
)

# --- MONTAGEM DA EQUIPE ---
print("\nüöÄ Montando equipe de desenvolvimento...")
equipe_produto = Crew(
    agents=[descobridor, criador],
    tasks=[tarefa_problema, tarefa_app],
    process=Process.sequential,
    verbose=True
)

# --- EXECUTANDO O TRABALHO ---
print("\nüé¨ Descobrindo problemas e criando solu√ß√µes...")
print("Aguarde enquanto nossa equipe desenvolve a ideia...\n")

try:
    resultado = equipe_produto.kickoff()

    print("\n" + "="*60)
    print("üéâ IDEIA DE APP CRIADA!")
    print("="*60)
    print("\nüí° SUA NOVA IDEIA DE APLICATIVO:")
    print("-" * 40)
    print(resultado)

    print("\n" + "="*60)
    print("üìö O QUE VOC√ä APRENDEU:")
    print("="*60)
    print("‚úÖ Identificou problemas reais de usu√°rios")
    print("‚úÖ Criou solu√ß√µes tecnol√≥gicas pr√°ticas")
    print("‚úÖ Desenvolveu ideias de produto com foco no usu√°rio")
    print("‚úÖ Aplicou processo criativo estruturado")

except Exception as e:
    print(f"\n‚ùå Erro durante a execu√ß√£o: {e}")
    print("\nüîß Dicas para resolver:")
    print("- Verifique se sua chave OpenAI est√° configurada")
    print("- Confirme se tem cr√©ditos na conta OpenAI")
    print("- Tente executar novamente")
